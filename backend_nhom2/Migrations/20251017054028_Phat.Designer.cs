// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_nhom2.Data;

#nullable disable

namespace backend_nhom2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251017054028_Phat")]
    partial class Phat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend_nhom2.Domain.CtDiemGiao", b =>
                {
                    b.Property<string>("IdDD")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("D_DD");

                    b.Property<string>("BS_XE")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MADON")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("NGAYGIAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("TRANGTHAI")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdDD", "BS_XE", "MADON");

                    b.HasIndex("BS_XE");

                    b.HasIndex("MADON");

                    b.ToTable("CT_DIEMGIAO", (string)null);

                    b.HasData(
                        new
                        {
                            IdDD = "DG01",
                            BS_XE = "51A-00001",
                            MADON = "DH001",
                            TRANGTHAI = "CHO_GIAO"
                        },
                        new
                        {
                            IdDD = "DG02",
                            BS_XE = "51B-00002",
                            MADON = "DH002",
                            TRANGTHAI = "CHO_GIAO"
                        });
                });

            modelBuilder.Entity("backend_nhom2.Domain.CtDonHang", b =>
                {
                    b.Property<string>("MAHH")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MADON")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("DONGIA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.HasKey("MAHH", "MADON");

                    b.HasIndex("MADON");

                    b.ToTable("CT_DONHANG", (string)null);

                    b.HasData(
                        new
                        {
                            MAHH = "H001",
                            MADON = "DH001",
                            DONGIA = 350000m,
                            SL = 2
                        },
                        new
                        {
                            MAHH = "H002",
                            MADON = "DH001",
                            DONGIA = 120000m,
                            SL = 3
                        },
                        new
                        {
                            MAHH = "H002",
                            MADON = "DH002",
                            DONGIA = 110000m,
                            SL = 1
                        });
                });

            modelBuilder.Entity("backend_nhom2.Domain.DiemGiao", b =>
                {
                    b.Property<string>("IdDD")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("D_DD");

                    b.Property<string>("TEN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VITRI")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdDD");

                    b.ToTable("DIEMGIAO", (string)null);

                    b.HasData(
                        new
                        {
                            IdDD = "DG01",
                            TEN = "Kho Quận 1",
                            VITRI = "Q1"
                        },
                        new
                        {
                            IdDD = "DG02",
                            TEN = "Kho Quận 7",
                            VITRI = "Q7"
                        });
                });

            modelBuilder.Entity("backend_nhom2.Domain.DonHang", b =>
                {
                    b.Property<string>("MADON")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MALOAI")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NGAYLAP")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TONGTIEN")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MADON");

                    b.HasIndex("MALOAI");

                    b.ToTable("DONHANG", (string)null);

                    b.HasData(
                        new
                        {
                            MADON = "DH001",
                            MALOAI = "L1",
                            NGAYLAP = new DateTime(2025, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TONGTIEN = 0m
                        },
                        new
                        {
                            MADON = "DH002",
                            MALOAI = "L2",
                            NGAYLAP = new DateTime(2025, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TONGTIEN = 0m
                        });
                });

            modelBuilder.Entity("backend_nhom2.Domain.HangHoa", b =>
                {
                    b.Property<string>("MAHH")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MALOAI")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<string>("TENHH")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("MAHH");

                    b.HasIndex("MALOAI");

                    b.ToTable("HANGHOA", (string)null);

                    b.HasData(
                        new
                        {
                            MAHH = "H001",
                            MALOAI = "L1",
                            SL = 100,
                            TENHH = "Tai nghe"
                        },
                        new
                        {
                            MAHH = "H002",
                            MALOAI = "L2",
                            SL = 200,
                            TENHH = "Áo thun"
                        });
                });

            modelBuilder.Entity("backend_nhom2.Domain.LoaiHang", b =>
                {
                    b.Property<string>("MALOAI")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SL")
                        .HasColumnType("int");

                    b.Property<string>("TENLOAI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MALOAI");

                    b.ToTable("LOAIHANG", (string)null);

                    b.HasData(
                        new
                        {
                            MALOAI = "L1",
                            SL = 0,
                            TENLOAI = "Điện tử"
                        },
                        new
                        {
                            MALOAI = "L2",
                            SL = 0,
                            TENLOAI = "Thời trang"
                        });
                });

            modelBuilder.Entity("backend_nhom2.Domain.Xe", b =>
                {
                    b.Property<string>("BS_XE")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TENXE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TT_XE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BS_XE");

                    b.ToTable("XE", (string)null);

                    b.HasData(
                        new
                        {
                            BS_XE = "51A-00001",
                            TENXE = "Xe Tải Nhỏ",
                            TT_XE = "Sẵn sàng"
                        },
                        new
                        {
                            BS_XE = "51B-00002",
                            TENXE = "Xe Bán Tải",
                            TT_XE = "Bảo dưỡng"
                        });
                });

            modelBuilder.Entity("backend_nhom2.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("backend_nhom2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend_nhom2.Domain.CtDiemGiao", b =>
                {
                    b.HasOne("backend_nhom2.Domain.Xe", "Xe")
                        .WithMany("CtDiemGiaos")
                        .HasForeignKey("BS_XE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("backend_nhom2.Domain.DiemGiao", "DiemGiao")
                        .WithMany("CtDiemGiaos")
                        .HasForeignKey("IdDD")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("backend_nhom2.Domain.DonHang", "DonHang")
                        .WithMany("CtDiemGiaos")
                        .HasForeignKey("MADON")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiemGiao");

                    b.Navigation("DonHang");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("backend_nhom2.Domain.CtDonHang", b =>
                {
                    b.HasOne("backend_nhom2.Domain.DonHang", "DonHang")
                        .WithMany("CtDonHangs")
                        .HasForeignKey("MADON")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_nhom2.Domain.HangHoa", "HangHoa")
                        .WithMany("CtDonHangs")
                        .HasForeignKey("MAHH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("HangHoa");
                });

            modelBuilder.Entity("backend_nhom2.Domain.DonHang", b =>
                {
                    b.HasOne("backend_nhom2.Domain.LoaiHang", "LoaiHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("MALOAI")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LoaiHang");
                });

            modelBuilder.Entity("backend_nhom2.Domain.HangHoa", b =>
                {
                    b.HasOne("backend_nhom2.Domain.LoaiHang", "LoaiHang")
                        .WithMany("HangHoas")
                        .HasForeignKey("MALOAI")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LoaiHang");
                });

            modelBuilder.Entity("backend_nhom2.Models.User", b =>
                {
                    b.HasOne("backend_nhom2.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("backend_nhom2.Domain.DiemGiao", b =>
                {
                    b.Navigation("CtDiemGiaos");
                });

            modelBuilder.Entity("backend_nhom2.Domain.DonHang", b =>
                {
                    b.Navigation("CtDiemGiaos");

                    b.Navigation("CtDonHangs");
                });

            modelBuilder.Entity("backend_nhom2.Domain.HangHoa", b =>
                {
                    b.Navigation("CtDonHangs");
                });

            modelBuilder.Entity("backend_nhom2.Domain.LoaiHang", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("HangHoas");
                });

            modelBuilder.Entity("backend_nhom2.Domain.Xe", b =>
                {
                    b.Navigation("CtDiemGiaos");
                });
#pragma warning restore 612, 618
        }
    }
}
