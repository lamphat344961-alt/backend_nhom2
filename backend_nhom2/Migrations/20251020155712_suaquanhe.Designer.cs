// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_nhom2.Data;

#nullable disable

namespace backend_nhom2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251020155712_suaquanhe")]
    partial class suaquanhe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend_nhom2.Domain.CtDiemGiao", b =>
                {
                    b.Property<string>("MADON")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IdDD")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("D_DD");

                    b.Property<DateTime?>("NGAYGIAO")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServiceMinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.Property<string>("TRANGTHAI")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long?>("WindowEnd")
                        .HasColumnType("bigint");

                    b.Property<long?>("WindowStart")
                        .HasColumnType("bigint");

                    b.HasKey("MADON", "IdDD");

                    b.HasIndex("IdDD");

                    b.ToTable("CT_DIEMGIAO", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Domain.CtDonHang", b =>
                {
                    b.Property<string>("MAHH")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MADON")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("DONGIA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.HasKey("MAHH", "MADON");

                    b.HasIndex("MADON");

                    b.ToTable("CT_DONHANG", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Domain.DiemGiao", b =>
                {
                    b.Property<string>("IdDD")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("D_DD");

                    b.Property<double?>("Lat")
                        .HasColumnType("float");

                    b.Property<double?>("Lng")
                        .HasColumnType("float");

                    b.Property<string>("TEN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VITRI")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("IdDD");

                    b.ToTable("DIEMGIAO", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Domain.DonHang", b =>
                {
                    b.Property<string>("MADON")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BS_XE")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LoaiHangMALOAI")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MALOAI")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NGAYLAP")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TONGTIEN")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MADON");

                    b.HasIndex("BS_XE");

                    b.HasIndex("LoaiHangMALOAI");

                    b.ToTable("DONHANG", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Domain.HangHoa", b =>
                {
                    b.Property<string>("MAHH")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MALOAI")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<string>("TENHH")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("MAHH");

                    b.HasIndex("MALOAI");

                    b.ToTable("HANGHOA", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Domain.LoaiHang", b =>
                {
                    b.Property<string>("MALOAI")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SL")
                        .HasColumnType("int");

                    b.Property<string>("TENLOAI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MALOAI");

                    b.ToTable("LOAIHANG", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Domain.Xe", b =>
                {
                    b.Property<string>("BS_XE")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TENXE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TT_XE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BS_XE");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("XE", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("backend_nhom2.Models.Route.RoutePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TotalSeconds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoutePlans", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Models.Route.RouteStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("EtaEpoch")
                        .HasColumnType("bigint");

                    b.Property<string>("EtaIso")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lng")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Polyline")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("RoutePlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoutePlanId", "Order")
                        .IsUnique();

                    b.ToTable("RouteStops", (string)null);
                });

            modelBuilder.Entity("backend_nhom2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend_nhom2.Domain.CtDiemGiao", b =>
                {
                    b.HasOne("backend_nhom2.Domain.DiemGiao", "DiemGiao")
                        .WithMany("CtDiemGiaos")
                        .HasForeignKey("IdDD")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("backend_nhom2.Domain.DonHang", "DonHang")
                        .WithMany("CtDiemGiaos")
                        .HasForeignKey("MADON")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiemGiao");

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("backend_nhom2.Domain.CtDonHang", b =>
                {
                    b.HasOne("backend_nhom2.Domain.DonHang", "DonHang")
                        .WithMany("CtDonHangs")
                        .HasForeignKey("MADON")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_nhom2.Domain.HangHoa", "HangHoa")
                        .WithMany("CtDonHangs")
                        .HasForeignKey("MAHH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("HangHoa");
                });

            modelBuilder.Entity("backend_nhom2.Domain.DonHang", b =>
                {
                    b.HasOne("backend_nhom2.Domain.Xe", "Xe")
                        .WithMany("DonHangs")
                        .HasForeignKey("BS_XE")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("backend_nhom2.Domain.LoaiHang", "LoaiHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("LoaiHangMALOAI");

                    b.Navigation("LoaiHang");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("backend_nhom2.Domain.HangHoa", b =>
                {
                    b.HasOne("backend_nhom2.Domain.LoaiHang", "LoaiHang")
                        .WithMany("HangHoas")
                        .HasForeignKey("MALOAI")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LoaiHang");
                });

            modelBuilder.Entity("backend_nhom2.Domain.Xe", b =>
                {
                    b.HasOne("backend_nhom2.Models.User", "User")
                        .WithOne("Xe")
                        .HasForeignKey("backend_nhom2.Domain.Xe", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend_nhom2.Models.Route.RouteStop", b =>
                {
                    b.HasOne("backend_nhom2.Models.Route.RoutePlan", "RoutePlan")
                        .WithMany("Stops")
                        .HasForeignKey("RoutePlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoutePlan");
                });

            modelBuilder.Entity("backend_nhom2.Models.User", b =>
                {
                    b.HasOne("backend_nhom2.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("backend_nhom2.Domain.DiemGiao", b =>
                {
                    b.Navigation("CtDiemGiaos");
                });

            modelBuilder.Entity("backend_nhom2.Domain.DonHang", b =>
                {
                    b.Navigation("CtDiemGiaos");

                    b.Navigation("CtDonHangs");
                });

            modelBuilder.Entity("backend_nhom2.Domain.HangHoa", b =>
                {
                    b.Navigation("CtDonHangs");
                });

            modelBuilder.Entity("backend_nhom2.Domain.LoaiHang", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("HangHoas");
                });

            modelBuilder.Entity("backend_nhom2.Domain.Xe", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("backend_nhom2.Models.Route.RoutePlan", b =>
                {
                    b.Navigation("Stops");
                });

            modelBuilder.Entity("backend_nhom2.Models.User", b =>
                {
                    b.Navigation("Xe");
                });
#pragma warning restore 612, 618
        }
    }
}
